<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xcx.com.dao.ExamhistoryMapper">
  <resultMap id="BaseResultMap" type="xcx.com.domain.Examhistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="exam_id" jdbcType="VARCHAR" property="examId" />
    <result column="test_id" jdbcType="INTEGER" property="testId" />
    <result column="xh" jdbcType="INTEGER" property="xh" />
    <result column="qid" jdbcType="INTEGER" property="qid" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="qtype" jdbcType="VARCHAR" property="qtype" />
    <result column="exam_answer" jdbcType="VARCHAR" property="examAnswer" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, exam_id, test_id, xh, qid, answer, qtype, exam_answer, user_id, `status`
  </sql>
  <select id="selectByExample" parameterType="xcx.com.example.ExamhistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from examhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from examhistory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExamHistory" parameterType="xcx.com.domain.Examhistory" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from examhistory
    where 1=1
    <if test="examId != null">
      and exam_id = #{examId,jdbcType=VARCHAR}
    </if>
    <if test="testId != null">
      and test_id = #{testId,jdbcType=INTEGER}
    </if>
    <if test="xh != null">
      and  xh = #{xh,jdbcType=INTEGER}
    </if>
    <if test="qid != null">
      and qid = #{qid,jdbcType=INTEGER}
    </if>
    <if test="qtype != null">
      and qtype = #{qtype,jdbcType=VARCHAR}
    </if>

    <if test="userId != null">
      and user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="status != null">
      and status = #{status,jdbcType=INTEGER}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from examhistory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xcx.com.example.ExamhistoryExample">
    delete from examhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="xcx.com.domain.Examhistory" useGeneratedKeys="true">
    insert into examhistory (exam_id, test_id, xh, 
      qid, answer, qtype, 
      exam_answer, user_id, `status`
      )
    values (#{examId,jdbcType=VARCHAR}, #{testId,jdbcType=INTEGER}, #{xh,jdbcType=INTEGER}, 
      #{qid,jdbcType=INTEGER}, #{answer,jdbcType=VARCHAR}, #{qtype,jdbcType=VARCHAR}, 
      #{examAnswer,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="xcx.com.domain.Examhistory" useGeneratedKeys="true">
    insert into examhistory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examId != null">
        exam_id,
      </if>
      <if test="testId != null">
        test_id,
      </if>
      <if test="xh != null">
        xh,
      </if>
      <if test="qid != null">
        qid,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="qtype != null">
        qtype,
      </if>
      <if test="examAnswer != null">
        exam_answer,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examId != null">
        #{examId,jdbcType=VARCHAR},
      </if>
      <if test="testId != null">
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="xh != null">
        #{xh,jdbcType=INTEGER},
      </if>
      <if test="qid != null">
        #{qid,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="qtype != null">
        #{qtype,jdbcType=VARCHAR},
      </if>
      <if test="examAnswer != null">
        #{examAnswer,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xcx.com.example.ExamhistoryExample" resultType="java.lang.Long">
    select count(*) from examhistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update examhistory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=VARCHAR},
      </if>
      <if test="record.testId != null">
        test_id = #{record.testId,jdbcType=INTEGER},
      </if>
      <if test="record.xh != null">
        xh = #{record.xh,jdbcType=INTEGER},
      </if>
      <if test="record.qid != null">
        qid = #{record.qid,jdbcType=INTEGER},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.qtype != null">
        qtype = #{record.qtype,jdbcType=VARCHAR},
      </if>
      <if test="record.examAnswer != null">
        exam_answer = #{record.examAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update examhistory
    set id = #{record.id,jdbcType=INTEGER},
      exam_id = #{record.examId,jdbcType=VARCHAR},
      test_id = #{record.testId,jdbcType=INTEGER},
      xh = #{record.xh,jdbcType=INTEGER},
      qid = #{record.qid,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=VARCHAR},
      qtype = #{record.qtype,jdbcType=VARCHAR},
      exam_answer = #{record.examAnswer,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xcx.com.domain.Examhistory">
    update examhistory
    <set>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=VARCHAR},
      </if>
      <if test="testId != null">
        test_id = #{testId,jdbcType=INTEGER},
      </if>
      <if test="xh != null">
        xh = #{xh,jdbcType=INTEGER},
      </if>
      <if test="qid != null">
        qid = #{qid,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="qtype != null">
        qtype = #{qtype,jdbcType=VARCHAR},
      </if>
      <if test="examAnswer != null">
        exam_answer = #{examAnswer,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xcx.com.domain.Examhistory">
    update examhistory
    set exam_id = #{examId,jdbcType=VARCHAR},
      test_id = #{testId,jdbcType=INTEGER},
      xh = #{xh,jdbcType=INTEGER},
      qid = #{qid,jdbcType=INTEGER},
      answer = #{answer,jdbcType=VARCHAR},
      qtype = #{qtype,jdbcType=VARCHAR},
      exam_answer = #{examAnswer,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>